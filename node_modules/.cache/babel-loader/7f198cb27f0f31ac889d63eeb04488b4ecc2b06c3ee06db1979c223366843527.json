{"ast":null,"code":"var _jsxFileName = \"D:\\\\front_end_denemeler\\\\react_denemeler\\\\proje\\\\weather-forecast-turkey\\\\src\\\\components\\\\Body.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect } from 'react';\nimport { CityContext } from '../context/CityContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"bc72320a4db7de1f5645c14cade36619\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\n// Konya coordinates = \"coord\":{\"lon\":32.4924,\"lat\":37.8727}\n// Izmir coordinates = \"lat\":38.4237433,\"lon\":27.1428019,\"\n// Istanbul coordinates = \"lat\":41.006381,\"lon\":28.9758715,\"\n// Ankara coordinates = \"lat\":39.9207759,\"lon\":32.8540497,\"\n// Antalya coordinates = \"lat\":36.8864752,\"lon\":30.7029585,\"\n\nfunction Body() {\n  _s();\n  const {\n    city,\n    setCity\n  } = useContext(CityContext);\n\n  // const selected = (() => {\n  //     axios(`${api.base}weather?q=${city}units=metric&APPID=${api.key}`)\n  //     .then((result) => {console.log(result);})\n  // })\n\n  useEffect(() => {\n    if (city === \"\") {\n      console.log(\"Nothing in there.\");\n    } else {\n      axios(`${api.base}weather?lat=32&lon=31&appid=${api.key}`).then(result => {\n        console.log(result);\n      });\n    }\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Body, \"p4MgM9p2WtGBiej5xobuH1eN1zo=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["useContext","useEffect","CityContext","axios","jsxDEV","_jsxDEV","api","key","base","Body","_s","city","setCity","console","log","then","result","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/front_end_denemeler/react_denemeler/proje/weather-forecast-turkey/src/components/Body.js"],"sourcesContent":["import {useContext, useEffect} from 'react'\r\nimport {CityContext} from '../context/CityContext'\r\nimport axios from 'axios';\r\n\r\nconst api = {\r\n    key: \"bc72320a4db7de1f5645c14cade36619\",\r\n    base: \"https://api.openweathermap.org/data/2.5/\"\r\n};\r\n\r\n// Konya coordinates = \"coord\":{\"lon\":32.4924,\"lat\":37.8727}\r\n// Izmir coordinates = \"lat\":38.4237433,\"lon\":27.1428019,\"\r\n// Istanbul coordinates = \"lat\":41.006381,\"lon\":28.9758715,\"\r\n// Ankara coordinates = \"lat\":39.9207759,\"lon\":32.8540497,\"\r\n// Antalya coordinates = \"lat\":36.8864752,\"lon\":30.7029585,\"\r\n\r\nfunction Body() {\r\n    const {city, setCity} = useContext(CityContext);\r\n\r\n    // const selected = (() => {\r\n    //     axios(`${api.base}weather?q=${city}units=metric&APPID=${api.key}`)\r\n    //     .then((result) => {console.log(result);})\r\n    // })\r\n\r\n    useEffect(() => {\r\n        if (city === \"\"){ console.log(\"Nothing in there.\")}\r\n        else {\r\n            axios(`${api.base}weather?lat=32&lon=31&appid=${api.key}`)\r\n            .then((result) => {console.log(result);})\r\n        }\r\n    }, [city])\r\n\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Body\r\n"],"mappings":";;AAAA,SAAQA,UAAU,EAAEC,SAAS,QAAO,OAAO;AAC3C,SAAQC,WAAW,QAAO,wBAAwB;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAG;EACRC,GAAG,EAAE,kCAAkC;EACvCC,IAAI,EAAE;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM;IAACC,IAAI;IAAEC;EAAO,CAAC,GAAGZ,UAAU,CAACE,WAAW,CAAC;;EAE/C;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACZ,IAAIU,IAAI,KAAK,EAAE,EAAC;MAAEE,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAAA,CAAC,MAC9C;MACDX,KAAK,CAAC,GAAGG,GAAG,CAACE,IAAI,+BAA+BF,GAAG,CAACC,GAAG,EAAE,CAAC,CACzDQ,IAAI,CAAEC,MAAM,IAAK;QAACH,OAAO,CAACC,GAAG,CAACE,MAAM,CAAC;MAAC,CAAC,CAAC;IAC7C;EACJ,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEZ,oBACEN,OAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAACV,EAAA,CArBQD,IAAI;AAAAY,EAAA,GAAJZ,IAAI;AAuBb,eAAeA,IAAI;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}